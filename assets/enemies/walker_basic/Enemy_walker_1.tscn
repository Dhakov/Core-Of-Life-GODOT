[gd_scene load_steps=68 format=2]

[ext_resource path="res://assets/enemies/walker_basic/basic_enemy_anim.png" type="Texture" id=1]
[ext_resource path="res://assets/lights/sprite_light.png" type="Texture" id=3]
[ext_resource path="res://assets/enemies/EnemyHealthBar.gd" type="Script" id=4]
[ext_resource path="res://assets/enemies/EnemyHealthBar.tscn" type="PackedScene" id=5]
[ext_resource path="res://assets/enemies/walker_basic/basic_enemy_dead_anim.png" type="Texture" id=6]
[ext_resource path="res://assets/particles/BloodAttackPart.tscn" type="PackedScene" id=7]
[ext_resource path="res://assets/enemies/walker_basic/basic_enemy_weak_dama_anim.png" type="Texture" id=8]
[ext_resource path="res://assets/enemies/walker_basic/sounds/snd_attack_1.wav" type="AudioStream" id=9]
[ext_resource path="res://assets/enemies/walker_basic/sounds/snd_damage_1.wav" type="AudioStream" id=10]
[ext_resource path="res://assets/enemies/walker_basic/sounds/snd_damage_3.wav" type="AudioStream" id=11]
[ext_resource path="res://assets/enemies/walker_basic/sounds/snd_damage_2.wav" type="AudioStream" id=12]
[ext_resource path="res://assets/enemies/walker_basic/sounds/snd_breath_in.wav" type="AudioStream" id=13]
[ext_resource path="res://assets/enemies/walker_basic/sounds/snd_breath_out.wav" type="AudioStream" id=14]
[ext_resource path="res://assets/enemies/walker_basic/sndBreathIn.gd" type="Script" id=15]
[ext_resource path="res://assets/enemies/walker_basic/sndBreathOut.gd" type="Script" id=16]
[ext_resource path="res://assets/enemies/walker_basic/basic_enemy_medium_dama_anim.png" type="Texture" id=17]
[ext_resource path="res://assets/enemies/walker_basic/basic_enemy_head_dama_anim.png" type="Texture" id=18]
[ext_resource path="res://assets/enemies/walker_basic/basic_enemy_hard_dama_anim.png" type="Texture" id=19]

[sub_resource type="GDScript" id=1]
resource_local_to_scene = true
script/source = "extends KinematicBody2D

export var bloodSplash : PackedScene;

const acceleration = 1516;
const friction = 0.6;
const air_resistance = 0.05;
const jump_force = 320;

var max_speed = 112;

var gravity = 1024;
var motion = Vector2.ZERO;

var state = \"idle\";
var dir = 1;
var knockback_type = \"weak_damage\";
var is_moving = false;
var flash_color = 1;

export (int) var health_points = 50;
var max_health_points = 50;
var regen_amount = 5;

onready var animation = $AnimatedSprite;
onready var animation_player = $AnimatedSprite/AnimationPlayer;
onready var health_bar = $HpIndex/EnemyHealthBar;
onready var damage_flash = $damage_flash;

onready var snd_damage_1 = $Sounds/sndDamage1
onready var snd_damage_2 = $Sounds/sndDamage2
onready var snd_damage_3 = $Sounds/sndDamage3

onready var bullet_polygon = $BulletPoligon

onready var eye_light = $Light2DOrigin

onready var particles_position = $Misc/BloodPosition

func _ready():
	var mat = get_node(\"AnimatedSprite\").get_material().duplicate(true)

	get_node(\"AnimatedSprite\").set_material(mat)

	pass

func _physics_process(delta):
	 
#	$Label.text = str(flash_color)
	
	dir = sign(Global.player.position.x - position.x);
	if dir == 0:
		dir = 1;
	
	eye_light.scale.x = dir
	
	#Actualizar barra de salud
	health_bar.set_percent_value_int(float(health_points)/max_health_points * 100)
	#Regeneracion de salud
	if health_points < max_health_points:
		health_points = health_points + (regen_amount * delta)
	health_points = clamp(health_points, 0, max_health_points)
	
	#Muerte
	if health_points <= 1:
		state = \"dead\"
		
	match state:
		\"idle\":
			animation.scale.x = dir
			bullet_polygon.scale.x = dir
			   
			if (is_moving):
				motion.x += dir * acceleration * delta;
				motion.x = clamp(motion.x, -max_speed, max_speed);
			
			motion.y += gravity * delta;
			   
			if is_on_floor():
				#Animaciones en el piso
				if !is_moving:
					animation_player.play(\"idle\");
					
					#Cosas de friccion y salto
					if (!is_moving):
						motion.x = lerp(motion.x, 0, friction);
		\"knockback\":
			motion.y += gravity * delta;
			if motion.x != 0:
				motion.x = lerp(motion.x, 0, delta * 5);
		\"dead\":
			animation_player.play(\"dead\")
			motion.x = lerp(motion.x, 0, delta * 5)
#			motion.y += gravity * delta
			
			regen_amount = 0
			set_collision_layer_bit(2, false)
			$Area2D.set_collision_mask_bit(0, false)
			
	if animation.scale.y != 1:
		animation.scale.y = lerp(animation.scale.y, 1, 0.14);
#
	if flash_color != 1:
		flash_color = lerp(flash_color, 1, 15*delta);
	
	animation.modulate = Color(flash_color,1,1)

	motion.y = move_and_slide(motion, Vector2.UP, true).y;

func damaged(damageRecieved, knockbackPower, knockbackType):
	if state != \"dead\":
		var player_scale = Global.player.get_node(\"AnimatedSprite\").scale.x;
		knockback_type = knockbackType;
		 
		health_points -= damageRecieved;
		state = \"knockback\";
		motion.x = knockbackPower * player_scale;
		 
		animation_player.stop();
		animation_player.play(knockbackType);
		 
		animation.scale.y = .6
		 
		flash_color = 255
		 
		#Elegir el sonido de daÃ±o
		var damage_snd_id = [0, 1, 2]
		var snd_id = damage_snd_id[randi() % damage_snd_id.size()]
		match snd_id:
			0:
				snd_damage_1.play();
			1:
				snd_damage_2.play();
			2:
				snd_damage_3.play();

func returnToIdle():
	state = \"idle\";

func die():
	state = \"dead\"


func create_particle(pos, amount):
	
	var blood = bloodSplash.instance() as Particles2D
	get_node(\"/root\").add_child(blood)
	blood.amount = amount
	blood.global_position = pos
	blood.rotation = rotation




"

[sub_resource type="CanvasItemMaterial" id=2]
resource_local_to_scene = true

[sub_resource type="AtlasTexture" id=3]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 1 )
region = Rect2( 32, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 1 )
region = Rect2( 64, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 1 )
region = Rect2( 96, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=7]
atlas = ExtResource( 1 )
region = Rect2( 128, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=8]
atlas = ExtResource( 1 )
region = Rect2( 160, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=9]
atlas = ExtResource( 1 )
region = Rect2( 192, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=10]
atlas = ExtResource( 18 )
region = Rect2( 0, 0, 50, 44 )

[sub_resource type="AtlasTexture" id=11]
atlas = ExtResource( 18 )
region = Rect2( 50, 0, 50, 44 )

[sub_resource type="AtlasTexture" id=12]
atlas = ExtResource( 18 )
region = Rect2( 100, 0, 50, 44 )

[sub_resource type="AtlasTexture" id=13]
atlas = ExtResource( 18 )
region = Rect2( 150, 0, 50, 44 )

[sub_resource type="AtlasTexture" id=14]
atlas = ExtResource( 18 )
region = Rect2( 200, 0, 50, 44 )

[sub_resource type="AtlasTexture" id=15]
atlas = ExtResource( 18 )
region = Rect2( 250, 0, 50, 44 )

[sub_resource type="AtlasTexture" id=16]
atlas = ExtResource( 19 )
region = Rect2( 0, 0, 50, 44 )

[sub_resource type="AtlasTexture" id=17]
atlas = ExtResource( 19 )
region = Rect2( 50, 0, 50, 44 )

[sub_resource type="AtlasTexture" id=18]
atlas = ExtResource( 19 )
region = Rect2( 100, 0, 50, 44 )

[sub_resource type="AtlasTexture" id=19]
atlas = ExtResource( 19 )
region = Rect2( 150, 0, 50, 44 )

[sub_resource type="AtlasTexture" id=20]
atlas = ExtResource( 19 )
region = Rect2( 200, 0, 50, 44 )

[sub_resource type="AtlasTexture" id=21]
atlas = ExtResource( 19 )
region = Rect2( 250, 0, 50, 44 )

[sub_resource type="AtlasTexture" id=22]
atlas = ExtResource( 8 )
region = Rect2( 0, 0, 42, 44 )

[sub_resource type="AtlasTexture" id=23]
atlas = ExtResource( 8 )
region = Rect2( 42, 0, 42, 44 )

[sub_resource type="AtlasTexture" id=24]
atlas = ExtResource( 8 )
region = Rect2( 84, 0, 42, 44 )

[sub_resource type="AtlasTexture" id=25]
atlas = ExtResource( 8 )
region = Rect2( 126, 0, 42, 44 )

[sub_resource type="AtlasTexture" id=26]
atlas = ExtResource( 8 )
region = Rect2( 168, 0, 42, 44 )

[sub_resource type="AtlasTexture" id=27]
atlas = ExtResource( 8 )
region = Rect2( 210, 0, 42, 44 )

[sub_resource type="AtlasTexture" id=28]
atlas = ExtResource( 17 )
region = Rect2( 0, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=29]
atlas = ExtResource( 17 )
region = Rect2( 32, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=30]
atlas = ExtResource( 17 )
region = Rect2( 64, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=31]
atlas = ExtResource( 17 )
region = Rect2( 96, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=32]
atlas = ExtResource( 17 )
region = Rect2( 128, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=33]
atlas = ExtResource( 17 )
region = Rect2( 160, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=34]
atlas = ExtResource( 6 )
region = Rect2( 0, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=35]
atlas = ExtResource( 6 )
region = Rect2( 32, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=36]
atlas = ExtResource( 6 )
region = Rect2( 64, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=37]
atlas = ExtResource( 6 )
region = Rect2( 96, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=38]
atlas = ExtResource( 6 )
region = Rect2( 128, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=39]
atlas = ExtResource( 6 )
region = Rect2( 160, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=40]
atlas = ExtResource( 6 )
region = Rect2( 192, 0, 32, 44 )

[sub_resource type="AtlasTexture" id=41]
atlas = ExtResource( 6 )
region = Rect2( 224, 0, 32, 44 )

[sub_resource type="SpriteFrames" id=42]
resource_local_to_scene = true
animations = [ {
"frames": [ SubResource( 3 ), SubResource( 4 ), SubResource( 5 ), SubResource( 6 ), SubResource( 7 ), SubResource( 8 ), SubResource( 9 ) ],
"loop": true,
"name": "idle",
"speed": 10.0
}, {
"frames": [ SubResource( 10 ), SubResource( 11 ), SubResource( 12 ), SubResource( 13 ), SubResource( 14 ), SubResource( 15 ) ],
"loop": true,
"name": "head_damage",
"speed": 5.0
}, {
"frames": [ SubResource( 16 ), SubResource( 17 ), SubResource( 18 ), SubResource( 19 ), SubResource( 20 ), SubResource( 21 ) ],
"loop": true,
"name": "hard_damage",
"speed": 5.0
}, {
"frames": [ SubResource( 22 ), SubResource( 23 ), SubResource( 24 ), SubResource( 25 ), SubResource( 26 ), SubResource( 27 ) ],
"loop": true,
"name": "weak_damage",
"speed": 15.0
}, {
"frames": [ SubResource( 28 ), SubResource( 29 ), SubResource( 30 ), SubResource( 31 ), SubResource( 32 ), SubResource( 33 ) ],
"loop": true,
"name": "medium_damage",
"speed": 15.0
}, {
"frames": [ SubResource( 34 ), SubResource( 35 ), SubResource( 36 ), SubResource( 37 ), SubResource( 38 ), SubResource( 39 ), SubResource( 40 ), SubResource( 41 ) ],
"loop": true,
"name": "dead",
"speed": 5.0
} ]

[sub_resource type="Animation" id=43]
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "dead" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.4, 0.5, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 1.0, 1.0, 0.1, 0.1 ]
}
tracks/3/type = "method"
tracks/3/path = NodePath("..")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.8 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "queue_free"
} ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("..:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.5, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=44]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "hard_damage" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.8, 1.0, 0.7, 0.3, 1.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../BulletPoligon:polygon")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ PoolVector2Array( -4, 19, -4, 1, 1, -3, 6, -5, 6, -8, 17, -8, 17, 3, 7, 3, 5, 2, 5, 19 ), PoolVector2Array( -4, 19, -4, 4, 3, 1, 9, 0, 13, -3, 22, -3, 22, 7, 13, 7, 9, 9, 5, 19 ), PoolVector2Array( -4, 19, -4, 7, 3, 3, 9, 4, 12, 1, 22, 1, 22, 12, 12, 12, 10, 11, 5, 19 ), PoolVector2Array( -4, 19, -4, 5, 1, 3, 7, 1, 10, 1, 19, 2, 19, 12, 10, 13, 7, 11, 5, 19 ), PoolVector2Array( -4, 19, -4, 5, -4, 2, 5, 0, 8, -3, 18, -3, 18, 7, 8, 7, 5, 6, 5, 19 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../Light2DOrigin/Light2D:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Vector2( 10, -26 ), Vector2( 10, -22 ), Vector2( 7, -26 ), Vector2( 6, -31 ), Vector2( 3, -36 ) ]
}
tracks/5/type = "method"
tracks/5/path = NodePath("..")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0.477188 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "returnToIdle"
} ]
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:self_modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = false
tracks/6/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 100, 100, 100, 1 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=45]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "head_damage" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.8, 1.0, 1.0, 1.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../BulletPoligon:polygon")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ PoolVector2Array( -4, 19, -4, -2, -8, -2, -19, -2, -19, -12, -8, -12, 1, -7, 3, -6, 5, -1, 5, 19 ), PoolVector2Array( -4, 19, -4, -2, -9, 1, -11, 4, -21, 4, -21, -6, -10, -6, 0, -4, 5, -1, 5, 19 ), PoolVector2Array( -4, 19, -4, -2, -9, 1, -10, 5, -19, 5, -19, -6, -10, -6, 0, -4, 5, -1, 5, 19 ), PoolVector2Array( -4, 19, -4, -2, -5, -1, -6, 2, -16, 2, -16, -8, -5, -6, 0, -4, 5, -1, 5, 19 ), PoolVector2Array( -4, 19, -4, -4, -8, -4, -14, -4, -16, -10, -11, -15, -2, -10, 3, -9, 5, -5, 5, 19 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../Light2DOrigin/Light2D:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Vector2( 10, -26 ), Vector2( 10, -22 ), Vector2( 7, -26 ), Vector2( 6, -31 ), Vector2( 3, -36 ) ]
}
tracks/5/type = "method"
tracks/5/path = NodePath("..")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0.453273 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "returnToIdle"
} ]
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:self_modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = false
tracks/6/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 100, 100, 100, 1 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=46]
length = 0.7
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "idle" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.5 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../Sounds/sndBreathIn:playing")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../Sounds/sndBreathOut:playing")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0.4 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:self_modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = false
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("../BulletPoligon:polygon")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ PoolVector2Array( -4, 19, -4, -9, -1, -10, -3, -11, -3, -21, 7, -21, 7, -11, 4, -10, 5, -9, 5, 19 ), PoolVector2Array( -4, 19, -4, -9, -1, -10, -3, -11, -3, -21, 7, -21, 7, -11, 4, -10, 5, -9, 5, 19 ), PoolVector2Array( -4, 19, -4, -9, -2, -11, -4, -12, -4, -22, 6, -22, 6, -12, 4, -11, 5, -9, 5, 19 ), PoolVector2Array( -4, 19, -4, -9, -2, -12, -5, -13, -5, -24, 5, -24, 5, -13, 2, -12, 5, -9, 5, 19 ), PoolVector2Array( -4, 19, -4, -9, -2, -12, -5, -13, -5, -25, 5, -25, 5, -13, 2, -12, 5, -9, 5, 19 ), PoolVector2Array( -4, 19, -4, -9, -1, -11, -5, -12, -5, -22, 5, -22, 5, -12, 2, -11, 5, -9, 5, 19 ), PoolVector2Array( -4, 19, -4, -9, -1, -10, -3, -11, -3, -21, 7, -21, 7, -11, 4, -10, 5, -9, 5, 19 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("../Light2DOrigin/Light2D:position")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 2, -36 ) ]
}

[sub_resource type="Animation" id=47]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "medium_damage" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.8, 1.0, 1.0, 1.0, 0.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../BulletPoligon:polygon")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ PoolVector2Array( -4, 19, -4, -8, 0, -9, -3, -12, -3, -20, 7, -20, 7, -11, 3, -9, 5, -8, 5, 19 ), PoolVector2Array( -4, 19, -4, 6, -4, -2, 2, -4, 3, -11, 13, -11, 13, 1, 5, 0, 5, 6, 5, 19 ), PoolVector2Array( -4, 19, -4, 6, -4, 2, -1, -1, 3, -7, 12, -7, 12, 4, 5, 4, 5, 6, 5, 19 ), PoolVector2Array( -4, 19, -4, 6, -4, -1, 0, -4, 0, -10, 10, -10, 10, 0, 5, 0, 5, 6, 5, 19 ), PoolVector2Array( -4, 19, -4, -8, -1, -10, -3, -11, -3, -20, 7, -20, 7, -11, 4, -10, 5, -8, 5, 19 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../Light2DOrigin/Light2D:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Vector2( 10, -26 ), Vector2( 10, -22 ), Vector2( 7, -26 ), Vector2( 6, -31 ), Vector2( 3, -36 ) ]
}
tracks/5/type = "method"
tracks/5/path = NodePath("..")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0.449432 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "returnToIdle"
} ]
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:self_modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = false
tracks/6/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 100, 100, 100, 1 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=48]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "weak_damage" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.8, 1.0, 1.0, 1.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../BulletPoligon:polygon")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ PoolVector2Array( -4, 19, -4, -2, -1, -4, 4, -7, 4, -11, 13, -11, 13, -2, 7, -2, 5, -1, 5, 19 ), PoolVector2Array( -4, 19, -4, 6, -4, -2, 2, -4, 3, -7, 13, -7, 13, 2, 5, 2, 5, 6, 5, 19 ), PoolVector2Array( -4, 19, -4, 6, -4, -1, -1, -4, 2, -10, 10, -10, 10, 0, 5, 1, 5, 6, 5, 19 ), PoolVector2Array( -4, 19, -4, 6, -4, -1, 0, -7, 0, -15, 9, -15, 9, -5, 5, -5, 5, 6, 5, 19 ), PoolVector2Array( -4, 19, -4, -8, -1, -10, -3, -11, -3, -20, 7, -20, 7, -11, 4, -10, 5, -8, 5, 19 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../Light2DOrigin/Light2D:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ Vector2( 10, -26 ), Vector2( 10, -22 ), Vector2( 7, -26 ), Vector2( 6, -31 ), Vector2( 3, -36 ) ]
}
tracks/5/type = "method"
tracks/5/path = NodePath("..")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0.453273 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "returnToIdle"
} ]
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = false
tracks/6/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ Color( 100, 100, 100, 1 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="RectangleShape2D" id=49]
extents = Vector2( 5, 19 )

[node name="Enemy_walker_1" type="KinematicBody2D" groups=[
"Enemy",
]]
z_index = -1
collision_layer = 4
script = SubResource( 1 )
bloodSplash = ExtResource( 7 )

[node name="HpIndex" type="Node2D" parent="."]
z_index = 10
__meta__ = {
"_edit_lock_": true
}

[node name="EnemyHealthBar" parent="HpIndex" instance=ExtResource( 5 )]
margin_left = -18.0
margin_top = -52.0
margin_right = 17.0
margin_bottom = -49.0
script = ExtResource( 4 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
material = SubResource( 2 )
position = Vector2( 0, -22 )
frames = SubResource( 42 )
animation = "dead"
frame = 7
speed_scale = 0.3

[node name="AnimationPlayer" type="AnimationPlayer" parent="AnimatedSprite"]
autoplay = "idle"
playback_speed = 0.1
anims/dead = SubResource( 43 )
anims/hard_damage = SubResource( 44 )
anims/head_damage = SubResource( 45 )
anims/idle = SubResource( 46 )
anims/medium_damage = SubResource( 47 )
anims/weak_damage = SubResource( 48 )

[node name="BulletPoligon" type="CollisionPolygon2D" parent="."]
position = Vector2( 0, -19 )
polygon = PoolVector2Array( -4, 19, -4, 1, 1, -3, 6, -5, 6, -8, 17, -8, 17, 3, 7, 3, 5, 2, 5, 19 )

[node name="Area2D" type="Area2D" parent="." groups=[
"Enemy_hit",
]]
collision_layer = 0

[node name="BasicCollision" type="CollisionShape2D" parent="Area2D"]
position = Vector2( 0, -19 )
shape = SubResource( 49 )

[node name="Light2DOrigin" type="Position2D" parent="."]

[node name="Light2D" type="Light2D" parent="Light2DOrigin"]
visible = false
position = Vector2( 10, -26 )
texture = ExtResource( 3 )
texture_scale = 0.2
color = Color( 1, 0, 0, 1 )
range_layer_min = -512
range_layer_max = 100

[node name="Sounds" type="Node2D" parent="."]
__meta__ = {
"_edit_lock_": true
}

[node name="sndAttack1" type="AudioStreamPlayer2D" parent="Sounds"]
stream = ExtResource( 9 )
volume_db = -10.0

[node name="sndDamage1" type="AudioStreamPlayer2D" parent="Sounds"]
stream = ExtResource( 10 )
volume_db = -30.0

[node name="sndDamage2" type="AudioStreamPlayer2D" parent="Sounds"]
stream = ExtResource( 12 )
volume_db = -25.0

[node name="sndDamage3" type="AudioStreamPlayer2D" parent="Sounds"]
stream = ExtResource( 11 )
volume_db = -28.0

[node name="sndBreathIn" type="AudioStreamPlayer2D" parent="Sounds"]
stream = ExtResource( 13 )
volume_db = -10.0
pitch_scale = 1.38
max_distance = 500.0
attenuation = 5.09824
script = ExtResource( 15 )

[node name="sndBreathOut" type="AudioStreamPlayer2D" parent="Sounds"]
stream = ExtResource( 14 )
volume_db = -10.0
pitch_scale = 1.38
max_distance = 500.0
attenuation = 5.27803
script = ExtResource( 16 )

[node name="Misc" type="Node2D" parent="."]

[node name="BloodPosition" type="Position2D" parent="Misc"]
position = Vector2( 0, -19 )
