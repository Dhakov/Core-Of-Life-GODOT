[gd_scene load_steps=164 format=2]

[ext_resource path="res://assets/player/anim_player_idle.png" type="Texture" id=1]
[ext_resource path="res://assets/player/anim_player_run.png" type="Texture" id=2]
[ext_resource path="res://assets/player/anim_player_crouch.png" type="Texture" id=3]
[ext_resource path="res://assets/player/anim_player_crouch_run.png" type="Texture" id=4]
[ext_resource path="res://assets/player/sounds/snd_player_grass_footstep_2.wav" type="AudioStream" id=5]
[ext_resource path="res://assets/player/FootstepSound.gd" type="Script" id=6]
[ext_resource path="res://assets/player/sndAttack2.gd" type="Script" id=7]
[ext_resource path="res://assets/lights/sprite_light.png" type="Texture" id=8]
[ext_resource path="res://assets/player/anim_player_jump_start.png" type="Texture" id=9]
[ext_resource path="res://assets/player/anim_player_jump_fall.png" type="Texture" id=10]
[ext_resource path="res://assets/player/sounds/snd_player_grass_fall.wav" type="AudioStream" id=11]
[ext_resource path="res://assets/player/SoundGrassFall.gd" type="Script" id=12]
[ext_resource path="res://assets/particles/JumpParticle.tscn" type="PackedScene" id=13]
[ext_resource path="res://assets/particles/FootstepParticle.tscn" type="PackedScene" id=14]
[ext_resource path="res://assets/player/combat_anims/anim_player_attack_2.png" type="Texture" id=15]
[ext_resource path="res://assets/player/combat_anims/anim_player_attack_1.png" type="Texture" id=16]
[ext_resource path="res://assets/player/combat_anims/anim_player_attack_3.png" type="Texture" id=17]
[ext_resource path="res://assets/player/sounds/combat_sounds/snd_slash_attack_3.wav" type="AudioStream" id=18]
[ext_resource path="res://assets/player/sounds/combat_sounds/snd_slash_attack_2.wav" type="AudioStream" id=19]
[ext_resource path="res://assets/player/sounds/combat_sounds/snd_slash_attack_1.wav" type="AudioStream" id=20]
[ext_resource path="res://assets/player/anim_player_jump_air.png" type="Texture" id=21]
[ext_resource path="res://assets/player/sounds/snd_player_grass_footstep.wav" type="AudioStream" id=22]
[ext_resource path="res://assets/player/sounds/snd_player_wood_footstep.wav" type="AudioStream" id=23]
[ext_resource path="res://assets/player/sounds/combat_sounds/impact/snd_impact_2.wav" type="AudioStream" id=24]
[ext_resource path="res://assets/player/sounds/combat_sounds/impact/snd_impact_1.wav" type="AudioStream" id=25]
[ext_resource path="res://assets/player/sndAttack1.gd" type="Script" id=26]
[ext_resource path="res://world/Camera2D.tscn" type="PackedScene" id=27]
[ext_resource path="res://assets/UI/HealthBar.tscn" type="PackedScene" id=28]
[ext_resource path="res://assets/player/combat_anims/anim_player_air_attack.png" type="Texture" id=29]
[ext_resource path="res://assets/player/weapon/player_aiming_body.png" type="Texture" id=30]
[ext_resource path="res://assets/player/weapon/Gun.tscn" type="PackedScene" id=31]
[ext_resource path="res://assets/player/weapon/PlayerHead.tscn" type="PackedScene" id=32]
[ext_resource path="res://assets/player/anim_player_crouch_aim.png" type="Texture" id=33]
[ext_resource path="res://assets/UI/EquipedWeaponUI.tscn" type="PackedScene" id=34]
[ext_resource path="res://assets/player/anim_player_roll.png" type="Texture" id=35]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

export (Resource) var footstep_grass
export (Resource) var footstep_wood
var stats = load(\"res://Stats.gd\").new()
#export (Resource) var stats


#Particulas
export var footstepPart : PackedScene
export var jumpPart : PackedScene

var inertia = 100

#Animacion
onready var animation = $AnimatedSprite/AnimationPlayer
onready var anim_scale = $AnimatedSprite

#Colisiones
	#Ataques basicos
onready var attack_area = $AttackCollisions/BasicAttackArea
onready var attack_collision = $AttackCollisions/BasicAttackArea/BasicAttackCollision
	#Ataque Aereo
onready var air_attack_area = $AttackCollisions/AirAttackArea
onready var air_attack_collision = $AttackCollisions/AirAttackArea/AirAttackCollision

	#De pie o agachado
onready var standing_collision = $StandingShape
onready var crouching_collision = $CrouchingShape

#Armas
onready var gun = $Position2D/Gun
onready var gun_holder = $Position2D
onready var head = $PlayerHead
var deg_for_bullet : float

#Sonidos
onready var footstep_sound = $AnimatedSprite/AnimationPlayer/FootstepSound
onready var snd_attack_1 = $Sounds/AttackSounds/sndAttack1
onready var snd_attack_2 = $Sounds/AttackSounds/sndAttack2

#Camara y UI
onready var camera = $Camera2D
onready var health_bar = $UiLayer/HealthBar

const acceleration = 1516
const friction = 0.6
const air_resistance = 0.1
const jump_force = 320
const snap_dir = Vector2.DOWN
const floor_max_angle = deg2rad(60)

var gravity = 1024
var motion = Vector2.ZERO
var snap_length = 3
var snap_vector = snap_dir * snap_length

var max_cam_x = 30
var max_cam_y = 30
var cam_speed = 0.02

var max_speed = 156

var state = \"idle\"

var play_fall_sound = false

var num_combo = 0
var max_combo = 3
var can_attack = true
var can_air_attack = true

var is_crouching = false
var is_sprinting = false

var going_to_attack = false;

#Variables de HP
var health_points = 50
var max_health_points = 100
var regen_amount = 0

var can_damage = true

var bullet_dispersion = 300
var weapon_recoil = 850

var equipped_weapon = 2
var has_weapon = true

#Ammo types
var heavy_ammo = 300
var light_ammo = 300



func _ready():
	footstep_sound.stream = footstep_grass;
	Global.player = self;
	
	pass;


func _physics_process(delta):
	#Variables de INPUT
	var key_right = Input.get_action_strength(\"ui_right\")
	var key_left = Input.get_action_strength(\"ui_left\")
	var key_jump = Input.is_action_just_pressed(\"ui_up\")
	var key_crouch = Input.is_action_pressed(\"ui_down\")
	var key_aim = Input.is_action_pressed(\"ui_aim\")
	var key_attack = Input.is_action_just_pressed(\"ui_attack\")
	var key_sprint = Input.is_action_pressed(\"ui_movement\")
	 
	var x_input = key_right - key_left;
	 
	camera.position.x = lerp(camera.position.x, (get_global_mouse_position().x - global_position.x) / 2, cam_speed);
	camera.position.y = lerp(camera.position.y, (get_global_mouse_position().y - (global_position.y) - 7) / 2, cam_speed);
	
	camera.position.x = clamp(camera.position.x, -max_cam_x, max_cam_x);
	camera.position.y = clamp(camera.position.y, -max_cam_y, max_cam_y);
	
	_cam_Zoom(delta)
	
	#Realizar Ataque
	if !_can_Stand():
		if key_attack and state != \"aiming\":
			if !going_to_attack:
				$AnimatedSprite/AnimationPlayer/SaveAttackTimer.wait_time = 0.3
				$AnimatedSprite/AnimationPlayer/SaveAttackTimer.start()
				going_to_attack = true
		attack()
	
	if is_on_floor():
		can_air_attack = true;
	
	#Probar da√±o
	if Input.is_action_just_pressed(\"ui_cancel\"):
		damaged(rand_range(5, 80))
	if Input.is_action_just_pressed(\"ui_end\"):
		health_points = max_health_points
	
	#Health Regen
	if health_points < max_health_points:
		health_points = health_points + (regen_amount * delta);
	
	#Update health value
	health_points = clamp(health_points, 0, max_health_points)
	health_bar.set_percent_value_int(float(health_points)/max_health_points * 100);
	
	attack_area.scale.x = anim_scale.scale.x;
	match state:
		\"idle\":
			can_attack = true;
			   
			if (x_input != 0):
				motion.x += x_input * acceleration * delta;
				motion.x = clamp(motion.x, -max_speed, max_speed);
			
				anim_scale.scale.x = x_input;
			motion.y += gravity * delta;
			
			if key_crouch:
				_on_Crouch()
			else:
				if !_can_Stand():
					_on_Stand()
			
			if is_on_floor():
				if key_aim and has_weapon:
					state = \"aiming\"
				if play_fall_sound:
					createJumpParticle()
					 
					$Sounds/SoundGrassFall.play();
					play_fall_sound = false;
					
				#Animaciones en el piso
				if x_input == 0:
					if is_crouching:
						animation.play(\"crouch\")
					else:
						animation.play(\"idle\")
				else:
					if is_crouching:
						animation.play(\"crouch_run\")
					else:
						if is_sprinting:
							animation.play(\"sprint\")
						else:
							animation.play(\"run\")
					
				#Cosas de friccion y salto
				snap_vector = snap_dir * snap_length;
				if (x_input == 0):
					motion.x = lerp(motion.x, 0, friction);
				
				
				if (key_jump and !_can_Stand()):
					anim_scale.scale.y = 1.5;
					motion.y = -jump_force;
						 
					snap_vector = Vector2(0, 0);
			elif !nextToWall():
				play_fall_sound = true;
				
				anim_scale.scale.y = lerp(anim_scale.scale.y, 1, 0.1);
				if (Input.is_action_just_released(\"ui_up\") and motion.y < -jump_force/2):
					motion.y = -jump_force/3;
				if (x_input == 0):
					motion.x = lerp(motion.x, 0, air_resistance);
					 
				if motion.y < 0:
					animation.play(\"jump_start\");
				else:
					animation.play(\"jump_fall\");
			
			if nextToWall():
				if (key_jump):
					anim_scale.scale.y = 1.5;
					motion.y = -jump_force;
						 
					snap_vector = Vector2(0, 0);
			
			if (key_sprint and x_input != 0 and !is_crouching):
				is_sprinting = true
				max_speed = 230
			
			if !key_sprint:
				is_sprinting = false
			
			attack_collision.disabled = true;
			change_weapon()
			initialize_roll()
		\"attacking\":
			var can_attack_frame = 7;
			   
			motion.x = lerp(motion.x, 0, 0.1);
			motion.y += gravity * delta;
			   
			var interrump_jump = Input.is_action_pressed(\"ui_up\")
			
			match num_combo:
				1:
					animation.play(\"slash_attack_1\");
						 
					if x_input != 0 and anim_scale.frame >= can_attack_frame + 4:
						state = \"idle\"
					
					if interrump_jump and anim_scale.frame >= can_attack_frame + 1:
						motion.y = -jump_force;
						snap_vector = Vector2(0, 0);
						state = \"idle\";
					
					if anim_scale.frame >= can_attack_frame + 1:
						 can_attack = true;
					else:
						can_attack = false;
						 
					if anim_scale.frame > 5 and anim_scale.frame <= 7:
						attack_collision.disabled = false;
					else:
						attack_collision.disabled = true;
				2:
					animation.play(\"slash_attack_2\");
						 
					if x_input != 0 and anim_scale.frame >= can_attack_frame + 3:
						state = \"idle\";
					
					if interrump_jump and anim_scale.frame >= can_attack_frame:
						motion.y = -jump_force;
						snap_vector = Vector2(0, 0);
						state = \"idle\";
					
					if anim_scale.frame >= can_attack_frame + 1:
						can_attack = true;
					else:
						can_attack = false;
						 
					if anim_scale.frame > 4 and anim_scale.frame <= 6:
						attack_collision.disabled = false;
					else:
						attack_collision.disabled = true;
				3:
					animation.play(\"slash_attack_3\");
					  
					if anim_scale.frame >= can_attack_frame - 7:
						can_attack = true;
					else:
						can_attack = false;
					
					if anim_scale.frame >= 5 and anim_scale.frame < 7:
						attack_collision.disabled = false;
					else:
						attack_collision.disabled = true;
						 
				_:
					attack_collision.disabled = true;
		\"air_attack\":
			motion.x = lerp(motion.x, 0, 0.1)
			motion.y += (gravity / 3) * delta
			
			animation.play(\"slash_air\")
			
			if anim_scale.frame >= 5 and anim_scale.frame < 7:
				air_attack_collision.disabled = false;
			else:
				air_attack_collision.disabled = true;
		\"aiming\":
			
			if key_crouch:
				_on_Crouch()
			else:
				if !_can_Stand():
					_on_Stand()
			
			motion.x = lerp(motion.x, 0, 0.1)
			motion.y += (gravity / 3) * delta
			
			if is_crouching:
				animation.play(\"crouch_aim\")
			else:
				animation.play(\"aiming\")
			
			if Input.is_action_just_released(\"ui_aim\"):
				state = \"idle\"
		\"roll\":
			motion.x = lerp(motion.x, 0, 0.05);
			motion.y += (gravity/2) * delta;
			
			anim_scale.scale.x = lerp(anim_scale.scale.x, 1 * sign(anim_scale.scale.x), 0.2)
			
			animation.play(\"roll\")
			
			if anim_scale.frame >= 1 and anim_scale.frame <= 5:
				can_damage = false
			else:
				can_damage = true
	
	
	gun_stuff()
	motion.y = move_and_slide_with_snap(motion, snap_vector, Vector2.UP, true, 4, floor_max_angle, false).y;
	inertia = abs(motion.x)
	
	for i in get_slide_count():
		var collision = get_slide_collision(i)
		if collision.collider.is_in_group(\"bodies\"):
			collision.collider.apply_central_impulse(-collision.normal * inertia)
	
	anim_scale.scale.y = lerp(anim_scale.scale.y, 1, 0.1);

func createFootstep():
	var fPart = footstepPart.instance() as Particles2D;
	get_parent().add_child(fPart);
	fPart.global_position = position;

func createJumpParticle():
	if is_on_floor():
		var jPart = jumpPart.instance() as Particles2D;
		get_parent().add_child(jPart);
		jPart.global_position = position;

func returnToIdle():
	state = \"idle\";

func attack():
	var key_attack = Input.is_action_just_pressed(\"ui_attack\")
	if (key_attack or going_to_attack) and (num_combo < max_combo):
		if is_on_floor() and (state != \"air_attack\") and state != \"aiming\":
			if can_attack:
				
				going_to_attack = false
				
				anim_scale.frame = 0;
				var attack_jump = 0;
				var key_right = Input.get_action_strength(\"ui_right\");
				var key_left = Input.get_action_strength(\"ui_left\");
				var timer = $AnimatedSprite/AnimationPlayer/AttackTimer;
				var x_input = key_right - key_left;
				
				timer.stop();
				num_combo += 1;
				attack_collision.disabled = true;
				state = \"attacking\";
				
				#Dar movimiento
				match num_combo:
					1:
						attack_jump = 110;
						timer.set_wait_time(1.2);
					2:
						attack_jump = 170;
						timer.set_wait_time(1.2);
					3:
						attack_jump = 260;
						timer.set_wait_time(0.4);
				
				if x_input != 0:
					anim_scale.scale.x = x_input;
				   
				can_attack = false;
				motion.x = 0;
				motion.x += attack_jump * sign(anim_scale.scale.x);
				   
				timer.start();
		elif !is_on_floor():
			if can_air_attack:
				#Ataque aereo
				going_to_attack = false
				can_air_attack = false
				motion.y = 0
				motion.y -= 70
				anim_scale.frame = 0
				state = \"air_attack\"

func damaged(damage_recieved):
	if can_damage:
		var shake_value = (damage_recieved * 1) / (max_health_points/2.5)
		health_bar.flash_color = 255;
		health_points -= damage_recieved;
		
		camera.cam_shake(200 * (shake_value * 1.5), 0.1 * (shake_value * 4), 400)
		health_bar.health_shake(200 * (shake_value), 0.1 * (shake_value * 6), 400)

func _on_AttackTimer_timeout():
	num_combo = 0;
	$AnimatedSprite/AnimationPlayer/AttackTimer.stop();

#Hitbox de ataques basicos
func _on_BasicAttackArea_area_entered(area):
	if attack_collision.disabled == false:
		attacksOnEnemy(area, 13 * num_combo/2)

#Hitbox de Ataque aereo
func _on_AirAttackArea_area_entered(area):
	if air_attack_collision.disabled == false:
		attacksOnEnemy(area, 10)

func attacksOnEnemy(body, damage):
	if body.is_in_group(\"Enemy_hit\"):
		var enemy_root = body.owner
		var knockback_power;
		var knockback_type = \"weak_damage\"
		
		match num_combo:
			1:
				knockback_power = 100;
				knockback_type = \"weak_damage\"
			2:
				knockback_power = 150;
				knockback_type = \"medium_damage\"
			3:
				knockback_power = 240;
				knockback_type = \"hard_damage\"
			_:
				knockback_power = 120;
				knockback_type = \"weak_damage\"
		
		enemy_root.damaged(damage, knockback_power, knockback_type);
		enemy_root.create_particle(enemy_root.particles_position.global_position, 15 * num_combo)
		
		var sound_id = [0, 1]
		var sound = sound_id[randi() % sound_id.size()]
		  
		match sound:
			0:
				snd_attack_1.play();
			1:
				snd_attack_2.play();
		
		health_points += 5;
		camera.cam_shake(200, .15 * num_combo/2.5, 200 * (num_combo/1.3));

func gun_stuff() -> void:
	if state == \"aiming\":
		var mouse_pos : Vector2 = get_global_mouse_position()
		
		deg_for_bullet = mouse_pos.angle_to_point(gun.global_position)
#		gun_holder.look_at(mouse_pos)
		gun_holder.rotation = lerp_angle(gun_holder.rotation, 
							(mouse_pos - gun_holder.global_position).normalized().angle(), 
							0.3)
		gun.real_weapon_rotation = gun_holder.rotation
		gun.real_weapon_rotation_degrees = gun_holder.rotation_degrees
		head.look_at(mouse_pos)
		
		gun.visible = true
		head.visible = true;
		if (global_position.x > mouse_pos.x):
			head.scale.y = -1
			gun.scale.y = -1
			anim_scale.scale.x = -1
		else:
			head.scale.y = 1;
			gun.scale.y = 1
			anim_scale.scale.x = 1
	else:
		gun.visible = false
		head.visible = false;

func nextToWall():
	return nextToRightWall() or nextToLeftWall()

func nextToRightWall():
	return $WallRaycast/RightWall.is_colliding()

func nextToLeftWall():
	return $WallRaycast/LeftWall.is_colliding()

func _on_Crouch():
	
	is_crouching = true
	standing_collision.disabled = true
	crouching_collision.disabled = false
	max_speed = 60

func _on_Stand():
	
	is_crouching = false
	standing_collision.disabled = false
	crouching_collision.disabled = true
	max_speed = 156

func _can_Stand():
	return $CrouchingShape/CanStandRay.is_colliding() or $CrouchingShape/CanStandRay2.is_colliding()

func _cam_Zoom(delta):
	var target_zoom
	var target_max_cam
	
	if state == \"aiming\":
		target_zoom = 1.4
		target_max_cam = 80
	else:
		target_zoom = 1
		target_max_cam = 30
	
	max_cam_x = lerp(max_cam_x, target_max_cam, 4 * delta)
	max_cam_y = max_cam_x
	camera.zoom.x = lerp(camera.zoom.x, target_zoom, 4 * delta)
	camera.zoom.y = camera.zoom.x

func _on_SaveAttackTimer_timeout():
	going_to_attack = false
	$AnimatedSprite/AnimationPlayer/SaveAttackTimer.stop()

func change_weapon():
	var key_change = Input.is_action_just_pressed(\"ui_select\")
	
	if key_change:
		equipped_weapon += 1
		gun.ammo_in_mag = 0
	
	if equipped_weapon > 3:
		equipped_weapon = 0

func initialize_roll():
	var key_roll = Input.is_action_just_pressed(\"ui_change_action\")
	
	if key_roll:
		state = \"roll\"
		anim_scale.scale.x *= 1.6
		motion.y = 0
		motion.x = 0
		motion.x += max_speed * 2 * sign(anim_scale.scale.x);


"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 5, 15 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 5, 9 )

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 1 )
region = Rect2( 32, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 1 )
region = Rect2( 64, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=7]
atlas = ExtResource( 1 )
region = Rect2( 96, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=8]
atlas = ExtResource( 1 )
region = Rect2( 128, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=9]
atlas = ExtResource( 1 )
region = Rect2( 160, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=10]
atlas = ExtResource( 1 )
region = Rect2( 192, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=11]
atlas = ExtResource( 30 )
region = Rect2( 0, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=12]
atlas = ExtResource( 30 )
region = Rect2( 32, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=13]
atlas = ExtResource( 30 )
region = Rect2( 64, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=14]
atlas = ExtResource( 30 )
region = Rect2( 96, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=15]
atlas = ExtResource( 30 )
region = Rect2( 128, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=16]
atlas = ExtResource( 30 )
region = Rect2( 160, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=17]
atlas = ExtResource( 30 )
region = Rect2( 192, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=18]
atlas = ExtResource( 33 )
region = Rect2( 0, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=19]
atlas = ExtResource( 33 )
region = Rect2( 32, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=20]
atlas = ExtResource( 33 )
region = Rect2( 64, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=21]
atlas = ExtResource( 33 )
region = Rect2( 96, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=22]
atlas = ExtResource( 33 )
region = Rect2( 128, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=23]
atlas = ExtResource( 33 )
region = Rect2( 160, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=24]
atlas = ExtResource( 33 )
region = Rect2( 192, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=25]
atlas = ExtResource( 35 )
region = Rect2( 0, 0, 54, 40 )

[sub_resource type="AtlasTexture" id=26]
atlas = ExtResource( 35 )
region = Rect2( 54, 0, 54, 40 )

[sub_resource type="AtlasTexture" id=27]
atlas = ExtResource( 35 )
region = Rect2( 108, 0, 54, 40 )

[sub_resource type="AtlasTexture" id=28]
atlas = ExtResource( 35 )
region = Rect2( 162, 0, 54, 40 )

[sub_resource type="AtlasTexture" id=29]
atlas = ExtResource( 35 )
region = Rect2( 216, 0, 54, 40 )

[sub_resource type="AtlasTexture" id=30]
atlas = ExtResource( 35 )
region = Rect2( 270, 0, 54, 40 )

[sub_resource type="AtlasTexture" id=31]
atlas = ExtResource( 35 )
region = Rect2( 324, 0, 54, 40 )

[sub_resource type="AtlasTexture" id=32]
atlas = ExtResource( 35 )
region = Rect2( 378, 0, 54, 40 )

[sub_resource type="AtlasTexture" id=33]
atlas = ExtResource( 29 )
region = Rect2( 0, 0, 76, 75 )

[sub_resource type="AtlasTexture" id=34]
atlas = ExtResource( 29 )
region = Rect2( 76, 0, 76, 75 )

[sub_resource type="AtlasTexture" id=35]
atlas = ExtResource( 29 )
region = Rect2( 152, 0, 76, 75 )

[sub_resource type="AtlasTexture" id=36]
atlas = ExtResource( 29 )
region = Rect2( 228, 0, 76, 75 )

[sub_resource type="AtlasTexture" id=37]
atlas = ExtResource( 29 )
region = Rect2( 304, 0, 76, 75 )

[sub_resource type="AtlasTexture" id=38]
atlas = ExtResource( 29 )
region = Rect2( 380, 0, 76, 75 )

[sub_resource type="AtlasTexture" id=39]
atlas = ExtResource( 29 )
region = Rect2( 456, 0, 76, 75 )

[sub_resource type="AtlasTexture" id=40]
atlas = ExtResource( 29 )
region = Rect2( 532, 0, 76, 75 )

[sub_resource type="AtlasTexture" id=41]
atlas = ExtResource( 29 )
region = Rect2( 608, 0, 76, 75 )

[sub_resource type="AtlasTexture" id=42]
atlas = ExtResource( 29 )
region = Rect2( 684, 0, 76, 75 )

[sub_resource type="AtlasTexture" id=43]
atlas = ExtResource( 29 )
region = Rect2( 760, 0, 76, 75 )

[sub_resource type="AtlasTexture" id=44]
atlas = ExtResource( 3 )
region = Rect2( 0, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=45]
atlas = ExtResource( 3 )
region = Rect2( 32, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=46]
atlas = ExtResource( 3 )
region = Rect2( 64, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=47]
atlas = ExtResource( 3 )
region = Rect2( 96, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=48]
atlas = ExtResource( 3 )
region = Rect2( 128, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=49]
atlas = ExtResource( 3 )
region = Rect2( 160, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=50]
atlas = ExtResource( 3 )
region = Rect2( 192, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=51]
atlas = ExtResource( 17 )
region = Rect2( 0, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=52]
atlas = ExtResource( 17 )
region = Rect2( 102, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=53]
atlas = ExtResource( 17 )
region = Rect2( 204, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=54]
atlas = ExtResource( 17 )
region = Rect2( 306, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=55]
atlas = ExtResource( 17 )
region = Rect2( 408, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=56]
atlas = ExtResource( 17 )
region = Rect2( 510, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=57]
atlas = ExtResource( 17 )
region = Rect2( 612, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=58]
atlas = ExtResource( 17 )
region = Rect2( 714, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=59]
atlas = ExtResource( 17 )
region = Rect2( 816, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=60]
atlas = ExtResource( 17 )
region = Rect2( 918, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=61]
atlas = ExtResource( 17 )
region = Rect2( 1020, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=62]
atlas = ExtResource( 4 )
region = Rect2( 0, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=63]
atlas = ExtResource( 4 )
region = Rect2( 32, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=64]
atlas = ExtResource( 4 )
region = Rect2( 64, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=65]
atlas = ExtResource( 4 )
region = Rect2( 96, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=66]
atlas = ExtResource( 4 )
region = Rect2( 128, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=67]
atlas = ExtResource( 4 )
region = Rect2( 160, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=68]
atlas = ExtResource( 4 )
region = Rect2( 192, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=69]
atlas = ExtResource( 15 )
region = Rect2( 0, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=70]
atlas = ExtResource( 15 )
region = Rect2( 102, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=71]
atlas = ExtResource( 15 )
region = Rect2( 204, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=72]
atlas = ExtResource( 15 )
region = Rect2( 306, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=73]
atlas = ExtResource( 15 )
region = Rect2( 408, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=74]
atlas = ExtResource( 15 )
region = Rect2( 510, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=75]
atlas = ExtResource( 15 )
region = Rect2( 612, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=76]
atlas = ExtResource( 15 )
region = Rect2( 714, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=77]
atlas = ExtResource( 15 )
region = Rect2( 816, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=78]
atlas = ExtResource( 15 )
region = Rect2( 918, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=79]
atlas = ExtResource( 15 )
region = Rect2( 1020, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=80]
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=81]
atlas = ExtResource( 2 )
region = Rect2( 32, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=82]
atlas = ExtResource( 2 )
region = Rect2( 64, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=83]
atlas = ExtResource( 2 )
region = Rect2( 96, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=84]
atlas = ExtResource( 2 )
region = Rect2( 128, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=85]
atlas = ExtResource( 2 )
region = Rect2( 160, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=86]
atlas = ExtResource( 2 )
region = Rect2( 192, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=87]
atlas = ExtResource( 2 )
region = Rect2( 224, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=88]
atlas = ExtResource( 10 )
region = Rect2( 0, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=89]
atlas = ExtResource( 10 )
region = Rect2( 32, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=90]
atlas = ExtResource( 10 )
region = Rect2( 64, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=91]
atlas = ExtResource( 10 )
region = Rect2( 96, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=92]
atlas = ExtResource( 21 )
region = Rect2( 0, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=93]
atlas = ExtResource( 21 )
region = Rect2( 32, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=94]
atlas = ExtResource( 21 )
region = Rect2( 64, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=95]
atlas = ExtResource( 21 )
region = Rect2( 96, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=96]
atlas = ExtResource( 16 )
region = Rect2( 0, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=97]
atlas = ExtResource( 16 )
region = Rect2( 102, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=98]
atlas = ExtResource( 16 )
region = Rect2( 204, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=99]
atlas = ExtResource( 16 )
region = Rect2( 306, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=100]
atlas = ExtResource( 16 )
region = Rect2( 408, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=101]
atlas = ExtResource( 16 )
region = Rect2( 510, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=102]
atlas = ExtResource( 16 )
region = Rect2( 612, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=103]
atlas = ExtResource( 16 )
region = Rect2( 714, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=104]
atlas = ExtResource( 16 )
region = Rect2( 816, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=105]
atlas = ExtResource( 16 )
region = Rect2( 918, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=106]
atlas = ExtResource( 16 )
region = Rect2( 1020, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=107]
atlas = ExtResource( 16 )
region = Rect2( 1122, 0, 102, 40 )

[sub_resource type="AtlasTexture" id=108]
atlas = ExtResource( 9 )
region = Rect2( 0, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=109]
atlas = ExtResource( 9 )
region = Rect2( 32, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=110]
atlas = ExtResource( 9 )
region = Rect2( 64, 0, 32, 40 )

[sub_resource type="AtlasTexture" id=111]
atlas = ExtResource( 9 )
region = Rect2( 96, 0, 32, 40 )

[sub_resource type="SpriteFrames" id=112]
animations = [ {
"frames": [ SubResource( 4 ), SubResource( 5 ), SubResource( 6 ), SubResource( 7 ), SubResource( 8 ), SubResource( 9 ), SubResource( 10 ) ],
"loop": true,
"name": "idle",
"speed": 5.0
}, {
"frames": [ SubResource( 11 ), SubResource( 12 ), SubResource( 13 ), SubResource( 14 ), SubResource( 15 ), SubResource( 16 ), SubResource( 17 ) ],
"loop": true,
"name": "aiming",
"speed": 5.0
}, {
"frames": [ SubResource( 18 ), SubResource( 19 ), SubResource( 20 ), SubResource( 21 ), SubResource( 22 ), SubResource( 23 ), SubResource( 24 ) ],
"loop": true,
"name": "crouch_aim",
"speed": 5.0
}, {
"frames": [ SubResource( 25 ), SubResource( 26 ), SubResource( 27 ), SubResource( 28 ), SubResource( 29 ), SubResource( 30 ), SubResource( 31 ), SubResource( 32 ) ],
"loop": true,
"name": "roll",
"speed": 5.0
}, {
"frames": [ SubResource( 33 ), SubResource( 34 ), SubResource( 35 ), SubResource( 36 ), SubResource( 37 ), SubResource( 38 ), SubResource( 39 ), SubResource( 40 ), SubResource( 41 ), SubResource( 42 ), SubResource( 43 ) ],
"loop": true,
"name": "slash_air",
"speed": 5.0
}, {
"frames": [ SubResource( 44 ), SubResource( 45 ), SubResource( 46 ), SubResource( 47 ), SubResource( 48 ), SubResource( 49 ), SubResource( 50 ) ],
"loop": true,
"name": "crouch",
"speed": 5.0
}, {
"frames": [ SubResource( 51 ), SubResource( 52 ), SubResource( 53 ), SubResource( 54 ), SubResource( 55 ), SubResource( 56 ), SubResource( 57 ), SubResource( 58 ), SubResource( 59 ), SubResource( 60 ), SubResource( 61 ) ],
"loop": true,
"name": "slash_attack_3",
"speed": 15.0
}, {
"frames": [ SubResource( 62 ), SubResource( 63 ), SubResource( 64 ), SubResource( 65 ), SubResource( 66 ), SubResource( 67 ), SubResource( 68 ) ],
"loop": true,
"name": "crouch_run",
"speed": 5.0
}, {
"frames": [ SubResource( 69 ), SubResource( 70 ), SubResource( 71 ), SubResource( 72 ), SubResource( 73 ), SubResource( 74 ), SubResource( 75 ), SubResource( 76 ), SubResource( 77 ), SubResource( 78 ), SubResource( 79 ) ],
"loop": true,
"name": "slash_attack_2",
"speed": 15.0
}, {
"frames": [ SubResource( 80 ), SubResource( 81 ), SubResource( 82 ), SubResource( 83 ), SubResource( 84 ), SubResource( 85 ), SubResource( 86 ), SubResource( 87 ) ],
"loop": true,
"name": "run",
"speed": 5.0
}, {
"frames": [ SubResource( 88 ), SubResource( 89 ), SubResource( 90 ), SubResource( 91 ) ],
"loop": true,
"name": "jump_fall",
"speed": 5.0
}, {
"frames": [ SubResource( 92 ), SubResource( 93 ), SubResource( 94 ), SubResource( 95 ) ],
"loop": true,
"name": "jump_air",
"speed": 5.0
}, {
"frames": [ SubResource( 96 ), SubResource( 97 ), SubResource( 98 ), SubResource( 99 ), SubResource( 100 ), SubResource( 101 ), SubResource( 102 ), SubResource( 103 ), SubResource( 104 ), SubResource( 105 ), SubResource( 106 ), SubResource( 107 ) ],
"loop": true,
"name": "slash_attack_1",
"speed": 15.0
}, {
"frames": [ SubResource( 108 ), SubResource( 109 ), SubResource( 110 ), SubResource( 111 ) ],
"loop": true,
"name": "jump_start",
"speed": 5.0
} ]

[sub_resource type="Animation" id=113]
length = 0.7
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "aiming" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.6 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../Position2D:position")
tracks/4/interp = 0
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ Vector2( 0, -22 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../PlayerHead:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ Vector2( 0, -24 ) ]
}

[sub_resource type="Animation" id=114]
length = 0.7
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "crouch" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.6 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../CrouchingShape:shape:extents")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 5, 9 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../CrouchingShape:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, -9 ) ]
}

[sub_resource type="Animation" id=115]
length = 0.7
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "crouch_aim" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.6 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../Position2D:position")
tracks/4/interp = 0
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ Vector2( 0, -16 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../PlayerHead:position")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ Vector2( 0, -17 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("../CrouchingShape:position")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, -12 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("../CrouchingShape:shape:extents")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 5, 12 ) ]
}

[sub_resource type="Animation" id=116]
length = 0.7
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "crouch_run" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.8 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=117]
length = 0.7
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "idle" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.6 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=118]
length = 0.4
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 1, 2, 0, 3 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "jump_air" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=119]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "jump_fall" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 1.6, 1.6, 0.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=120]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "jump_start" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 1.5, 1.5, 0.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=121]
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "roll" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.2, 0.263918, 0.540246, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 2.0, 2.0, 1.3, 1.3, 2.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 15, 0 ) ]
}
tracks/4/type = "method"
tracks/4/path = NodePath("..")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0.796585 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "returnToIdle"
} ]
}
tracks/5/type = "method"
tracks/5/path = NodePath("..")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.00720374, 0.440583, 0.526377 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"values": [ {
"args": [  ],
"method": "_on_Crouch"
}, {
"args": [  ],
"method": "createFootstep"
}, {
"args": [  ],
"method": "createJumpParticle"
}, {
"args": [  ],
"method": "createJumpParticle"
} ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("../CrouchingShape:shape:extents")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 5, 9 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("../CrouchingShape:position")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, -9 ) ]
}

[sub_resource type="Animation" id=122]
length = 0.8
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "run" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer/FootstepSound:playing")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.1, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("AnimationPlayer:playback_speed")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/4/type = "method"
tracks/4/path = NodePath("..")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0.1, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"values": [ {
"args": [  ],
"method": "createFootstep"
}, {
"args": [  ],
"method": "createFootstep"
} ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:offset")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=123]
length = 1.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "slash_air" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 0.4, 0.8, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 2.2, 2.2, 2.5, 2.5, 3.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, -5 ) ]
}
tracks/4/type = "method"
tracks/4/path = NodePath("..")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 1.1 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "returnToIdle"
} ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("AnimationPlayer/AttackSounds/SoundSlashAttack2:playing")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0.3 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=124]
length = 1.2
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "slash_attack_1" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.7, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 3.0, 3.0, 1.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 15, 0 ) ]
}
tracks/4/type = "method"
tracks/4/path = NodePath("..")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 1.2 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "returnToIdle"
} ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("AnimationPlayer/AttackSounds/SoundSlashAttack1:playing")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0.4 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=125]
length = 1.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "slash_attack_2" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.4, 0.7, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 3.0, 2.7, 2.2, 2.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 15, 0 ) ]
}
tracks/4/type = "method"
tracks/4/path = NodePath("..")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 1.1 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "returnToIdle"
} ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("AnimationPlayer/AttackSounds/SoundSlashAttack2:playing")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0.4 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=126]
length = 1.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "slash_attack_3" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3, 0.7, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 1.6, 3.0, 2.5, 1.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:offset")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 15, 0 ) ]
}
tracks/4/type = "method"
tracks/4/path = NodePath("..")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 1.1 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "returnToIdle"
} ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("AnimationPlayer/AttackSounds/SoundSlashAttack3:playing")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0.5 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=127]
length = 0.8
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "run" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("AnimationPlayer/FootstepSound:playing")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.1, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("AnimationPlayer:playback_speed")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.6 ]
}
tracks/4/type = "method"
tracks/4/path = NodePath("..")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0.1, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"values": [ {
"args": [  ],
"method": "createFootstep"
}, {
"args": [  ],
"method": "createFootstep"
} ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:offset")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}

[sub_resource type="RectangleShape2D" id=128]
extents = Vector2( 40, 18 )

[node name="Player" type="KinematicBody2D"]
collision_layer = 2
script = SubResource( 1 )
footstep_grass = ExtResource( 5 )
footstep_wood = ExtResource( 23 )
footstepPart = ExtResource( 14 )
jumpPart = ExtResource( 13 )

[node name="Camera2D" parent="." instance=ExtResource( 27 )]

[node name="Light2D" type="Light2D" parent="."]
position = Vector2( 0, -17 )
z_index = -1
texture = ExtResource( 8 )
texture_scale = 0.3
energy = 0.5
range_layer_min = -512
range_layer_max = 512
shadow_buffer_size = 128
shadow_gradient_length = 6.0
shadow_filter = 1
shadow_filter_smooth = 3.0
__meta__ = {
"_edit_lock_": true
}

[node name="StandingShape" type="CollisionShape2D" parent="."]
position = Vector2( 0, -15 )
z_index = 1
shape = SubResource( 2 )
__meta__ = {
"_edit_lock_": true
}

[node name="CrouchingShape" type="CollisionShape2D" parent="."]
position = Vector2( 0, -9 )
z_index = 1
shape = SubResource( 3 )
disabled = true

[node name="CanStandRay" type="RayCast2D" parent="CrouchingShape"]
visible = false
position = Vector2( -4, 0 )
enabled = true
cast_to = Vector2( 0, -20 )

[node name="CanStandRay2" type="RayCast2D" parent="CrouchingShape"]
visible = false
position = Vector2( 4, 0 )
enabled = true
cast_to = Vector2( 0, -20 )

[node name="PlayerHead" parent="." instance=ExtResource( 32 )]
visible = false
position = Vector2( 0, -24 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
position = Vector2( 0, -20 )
frames = SubResource( 112 )
animation = "aiming"
__meta__ = {
"_edit_lock_": true
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="AnimatedSprite"]
autoplay = "idle"
playback_speed = 0.6
anims/aiming = SubResource( 113 )
anims/crouch = SubResource( 114 )
anims/crouch_aim = SubResource( 115 )
anims/crouch_run = SubResource( 116 )
anims/idle = SubResource( 117 )
anims/jump_air = SubResource( 118 )
anims/jump_fall = SubResource( 119 )
anims/jump_start = SubResource( 120 )
anims/roll = SubResource( 121 )
anims/run = SubResource( 122 )
anims/slash_air = SubResource( 123 )
anims/slash_attack_1 = SubResource( 124 )
anims/slash_attack_2 = SubResource( 125 )
anims/slash_attack_3 = SubResource( 126 )
anims/sprint = SubResource( 127 )

[node name="FootstepSound" type="AudioStreamPlayer" parent="AnimatedSprite/AnimationPlayer"]
stream = ExtResource( 22 )
volume_db = -30.0
script = ExtResource( 6 )

[node name="AttackSounds" type="Node2D" parent="AnimatedSprite/AnimationPlayer"]

[node name="SoundSlashAttack1" type="AudioStreamPlayer" parent="AnimatedSprite/AnimationPlayer/AttackSounds"]
stream = ExtResource( 20 )
volume_db = -23.0

[node name="SoundSlashAttack2" type="AudioStreamPlayer" parent="AnimatedSprite/AnimationPlayer/AttackSounds"]
stream = ExtResource( 19 )
volume_db = -23.0

[node name="SoundSlashAttack3" type="AudioStreamPlayer" parent="AnimatedSprite/AnimationPlayer/AttackSounds"]
stream = ExtResource( 18 )
volume_db = -21.0
pitch_scale = 1.2

[node name="AttackTimer" type="Timer" parent="AnimatedSprite/AnimationPlayer"]
wait_time = 0.5

[node name="SaveAttackTimer" type="Timer" parent="AnimatedSprite/AnimationPlayer"]

[node name="Position2D" type="Position2D" parent="."]
position = Vector2( 0, -22 )
__meta__ = {
"_edit_group_": true
}

[node name="Gun" parent="Position2D" instance=ExtResource( 31 )]
visible = false

[node name="Sounds" type="Node2D" parent="."]
visible = false

[node name="SoundGrassFall" type="AudioStreamPlayer" parent="Sounds"]
stream = ExtResource( 11 )
volume_db = -30.0
script = ExtResource( 12 )

[node name="AttackSounds" type="Node2D" parent="Sounds"]

[node name="sndAttack1" type="AudioStreamPlayer2D" parent="Sounds/AttackSounds"]
stream = ExtResource( 25 )
volume_db = -25.0
script = ExtResource( 26 )

[node name="sndAttack2" type="AudioStreamPlayer2D" parent="Sounds/AttackSounds"]
stream = ExtResource( 24 )
volume_db = -25.0
script = ExtResource( 7 )

[node name="GroundDetectSound" type="RayCast2D" parent="Sounds"]
position = Vector2( 0, -14 )
enabled = true
cast_to = Vector2( 0, 16 )

[node name="AttackCollisions" type="Node2D" parent="."]

[node name="BasicAttackArea" type="Area2D" parent="AttackCollisions" groups=[
"Attack",
]]

[node name="BasicAttackCollision" type="CollisionShape2D" parent="AttackCollisions/BasicAttackArea"]
position = Vector2( 21, -17 )
shape = SubResource( 128 )
disabled = true

[node name="AirAttackArea" type="Area2D" parent="AttackCollisions" groups=[
"Attack",
]]

[node name="AirAttackCollision" type="CollisionPolygon2D" parent="AttackCollisions/AirAttackArea"]
polygon = PoolVector2Array( -29, 6, -39, -14, -39, -42, -18, -61, 19, -61, 38, -44, 40, -14, 26, 6, -7, 14 )
disabled = true

[node name="UiLayer" type="CanvasLayer" parent="."]
layer = 128

[node name="HealthBar" parent="UiLayer" groups=[
"PlayerHP",
] instance=ExtResource( 28 )]

[node name="EquipedWeaponUI" parent="UiLayer" instance=ExtResource( 34 )]
margin_left = 278.0
margin_top = 138.0
margin_right = 330.0
margin_bottom = 190.0

[node name="WallRaycast" type="Node2D" parent="."]
visible = false

[node name="RightWall" type="RayCast2D" parent="WallRaycast"]
position = Vector2( 0, -21 )
rotation = -1.5708
enabled = true
cast_to = Vector2( 0, 10 )

[node name="LeftWall" type="RayCast2D" parent="WallRaycast"]
position = Vector2( 0, -21 )
rotation = 1.5708
enabled = true
cast_to = Vector2( 0, 10 )

[connection signal="timeout" from="AnimatedSprite/AnimationPlayer/AttackTimer" to="." method="_on_AttackTimer_timeout"]
[connection signal="timeout" from="AnimatedSprite/AnimationPlayer/SaveAttackTimer" to="." method="_on_SaveAttackTimer_timeout"]
[connection signal="area_entered" from="AttackCollisions/BasicAttackArea" to="." method="_on_BasicAttackArea_area_entered"]
[connection signal="area_entered" from="AttackCollisions/AirAttackArea" to="." method="_on_AirAttackArea_area_entered"]
